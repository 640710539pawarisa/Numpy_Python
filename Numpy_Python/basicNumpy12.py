#identity matrix ,เมทริกซ์ทแยงมุม
import numpy as np #ตั้งชื่อ numpy เป็น np

#แบบ ปกติ มันจะเป็น float แต่ถ้าใส่ dtype='int ' ก็จะเป็น int
#สร้างแบบ 2 มิติ - 3x3 คือ 3 แถว 3 คอลัมน์
a = np.identity(3) #สร้าง identity matrix 3 มิติ
print(a)
#ผลลัพธ์ จะเป็น [[1., 0., 0.] [0., 1., 0.] [0., 0., 1.]]

#สร้างแบบ 2 มิติ - 4x4
b = np.identity(4) #สร้าง identity matrix 4 มิติ
print(b)
#ผลลัพธ์ จะเป็น [[1., 0., 0., 0.] [0., 1., 0., 0.] [0., 0., 1., 0.] [0., 0., 0., 1.]]

#สร้างแบบ 2 มิติ - 5x5
c = np.identity(5) #สร้าง identity matrix 5 มิติ
print(c)
#ผลลัพธ์ จะเป็น [[1., 0., 0., 0., 0.] [0., 1., 0., 0., 0.] [0., 0., 1., 0., 0.] [0., 0., 0., 1., 0.] [0., 0., 0., 0., 1.]]

#แบบ int
d = np.identity(5,dtype='int')
print(d)
#ผลลัพธ์ จะเป็น [[1, 0, 0, 0, 0] [0, 1, 0, 0, 0] [0, 0, 1, 0, 0] [0, 0, 0, 1, 0] [0, 0, 0, 0, 1]]

#มีข้อจำกัดคือ จำนวนแถว และ คอลัมน์ ต้องเท่ากัน!!!!!
#****ถ้าอยากให้ยืดหยุ่น ให้ใช้ np.eye()

#แบบ ใช้ คำสั่ง eye()
#สร้างแบบ 2 มิติ - 3x3 คือ 3 แถว 3 คอลัมน์
e = np.eye(3) #สร้าง identity matrix 3 มิติ
print(e)
#ผลลัพธ์ จะเป็น [[1., 0., 0.] [0., 1., 0.] [0., 0., 1.]]

#สร้างแบบ 2 มิติ - 4x4
f = np.eye(4) #สร้าง identity matrix 4 มิติ
print(f)
#ผลลัพธ์ จะเป็น [[1., 0., 0., 0.] [0., 1., 0., 0.] [0., 0., 1., 0.] [0., 0., 0., 1.]]

#สร้างแบบ 2 มิติ - 5x5
g = np.eye(5) #สร้าง identity matrix 5 มิติ
print(g)
#ผลลัพธ์ จะเป็น [[1., 0., 0., 0., 0.] [0., 1., 0., 0., 0.] [0., 0., 1., 0., 0.] [0., 0., 0., 1., 0.] [0., 0., 0., 0., 1.]]

#หรือแบบระบุจำนวนแถวกับคอลัมน์  ด้วยคำสั่ง eye()

h =np.eye(3,4)
print(h)
#ผลลัพธ์ จะเป็น [[1., 0., 0., 0.] [0., 1., 0., 0.] [0., 0., 1., 0.]]

#5x5 แบบปติ
s = np.eye(5)
print(s)
#แบบอยากให้มันขยับคอลัมไปข้างหลัง 1 คอลัมน์
s2 = np.eye(5,k=1)
print(s2)
#ผลลัพธ์ จะเป็น [[0., 1., 0., 0., 0.] [0., 0., 1., 0., 0.] [0., 0., 0., 1., 0.] [0., 0., 0., 0., 1.] [0., 0., 0., 0., 0.]]

#ถ้าอยากให้ขยับ 2 คอลัมน์
s3 = np.eye(5,k=2)
print(s3)
#ผลลัพธ์ จะเป็น [[0., 0., 1., 0., 0.] [0., 0., 0., 1., 0.] [0., 0., 0., 0., 1.] [0., 0., 0., 0., 0.] [0., 0., 0., 0., 0.]]

#แบบอยากให้มันขยับแถวไปล่าง 1 แถว
s3 = np.eye(5,k=-1)
print(s3)
#ผลลัพธ์ จะเป็น [[0., 0., 0., 0., 0.] [1., 0., 0., 0., 0.] [0., 1., 0., 0., 0.] [0., 0., 1., 0., 0.] [0., 0., 0., 1., 0.]]